return {
  -- "yetone/avante.nvim",
  -- event = "VeryLazy",
  -- -- enabled = vim.g.ai_assistant == "avante",
  -- version = false, -- Use latest code changes
  -- opts = {
  --   rag_service = {
  --     enabled = true, -- Enables the RAG service
  --     host_mount = os.getenv("HOME"), -- Host mount path for the rag service
  --     provider = "openai", -- The provider to use for RAG service (e.g. openai or ollama)
  --     llm_model = "", -- The LLM model to use for RAG service
  --     embed_model = "", -- The embedding model to use for RAG service
  --     endpoint = "https://api.openai.com/v1", -- The API endpoint for RAG service
  --   },
  --   provider = "copilot3",
  --   cursor_applying_provider = "copilot4",
  --   auto_suggestions_provider = "copilot4",
  --   behaviour = {
  --     auto_suggestions = false,
  --     auto_set_highlight_group = true,
  --     auto_set_keymaps = true,
  --     auto_apply_diff_after_generation = true,
  --     support_paste_from_clipboard = true,
  --     minimize_diff = true,
  --     enable_token_counting = false,
  --   },
  --   file_selector = {
  --     provider = vim.g.lazyvim_picker,
  --     provider_opts = {},
  --   },
  --   -- web_search_engine = {
  --   --   provider = "google",
  --   -- },
  --   disabled_tools = { "python" },
  --
  --   copilot = {
  --     endpoint = "https://api.githubcopilot.com",
  --     proxy = nil, -- [protocol://]host[:port] Use this proxy
  --     allow_insecure = false, -- Allow insecure server connections
  --     timeout = 10 * 60 * 1000, -- Timeout in milliseconds
  --     temperature = 0,
  --     max_completion_tokens = 1000000,
  --     reasoning_effort = "high",
  --   },
  --
  --   vendors = {
  --     ["copilot1"] = {
  --       __inherited_from = "copilot",
  --       model = "claude-3.5-sonnet",
  --       display_name = "claude-3.5-sonnet",
  --     },
  --     ["copilot2"] = {
  --       __inherited_from = "copilot",
  --       model = "claude-3.7-sonnet",
  --       display_name = "claude-3.7-sonnet",
  --     },
  --     ["copilot3"] = {
  --       __inherited_from = "copilot",
  --       model = "claude-3.7-sonnet-thought",
  --       display_name = "claude-3.7-sonnet-thought",
  --     },
  --     ["copilot4"] = {
  --       __inherited_from = "copilot",
  --       model = "o3-mini",
  --       display_name = "o3-mini",
  --     },
  --   },
  --   -- if you want to build from source then do `make BUILD_FROM_SOURCE=true`
  --   build = "make",
  --   -- build = "powershell -ExecutionPolicy Bypass -File Build.ps1 -BuildFromSource false" -- for windows
  --   dependencies = {
  --     "nvim-treesitter/nvim-treesitter",
  --     "stevearc/dressing.nvim",
  --     "nvim-lua/plenary.nvim",
  --     "MunifTanjim/nui.nvim",
  --     --- The below dependencies are optional,
  --     -- "echasnovski/mini.pick", -- for file_selector provider mini.pick
  --     -- "nvim-telescope/telescope.nvim", -- for file_selector provider telescope
  --     -- "hrsh7th/nvim-cmp", -- autocompletion for avante commands and mentions
  --     -- "ibhagwan/fzf-lua", -- for file_selector provider fzf
  --     -- "nvim-tree/nvim-web-devicons", -- or echasnovski/mini.icons
  --     "zbirenbaum/copilot.lua", -- for providers='copilot'
  --     {
  --       -- support for image pasting
  --       "HakonHarnes/img-clip.nvim",
  --       event = "VeryLazy",
  --       opts = {
  --         -- recommended settings
  --         default = {
  --           embed_image_as_base64 = false,
  --           prompt_for_file_name = false,
  --           drag_and_drop = {
  --             insert_mode = true,
  --           },
  --           -- required for Windows users
  --           use_absolute_path = true,
  --         },
  --       },
  --     },
  --     {
  --       -- Make sure to set this up properly if you have lazy=true
  --       "MeanderingProgrammer/render-markdown.nvim",
  --       opts = {
  --         file_types = { "markdown", "Avante" },
  --       },
  --       ft = { "markdown", "Avante" },
  --     },
  --   },
  -- },
}
